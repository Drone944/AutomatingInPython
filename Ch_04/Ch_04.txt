1. What is []?

	-> This is an empty list.

2. How would you assign the value 'hello' as the third value in a list stored in a variable named spam? (Assume spam contains [2, 4, 6, 8, 10].)

	-> spam.insert(2, 'hello')

For the following three questions, let’s say spam contains the list ['a', 'b', 'c', 'd'].
3. What does spam[int(int('3' * 2) // 11)] evaluate to?

	-> 'd'

4. What does spam[-1] evaluate to?

	-> 'd'

5. What does spam[:2] evaluate to?

	-> ['a', 'b']

For the following three questions, let’s say bacon contains the list [3.14, 'cat', 11, 'cat', True].
6. What does bacon.index('cat') evaluate to?

	-> 1

7. What does bacon.append(99) make the list value in bacon look like?

	-> [3.14, 'cat', 11, 'cat', True, 99]

8. What does bacon.remove('cat') make the list value in bacon look like?

	-> [3.14, 11, 'cat', True, 99]

9. What are the operators for list concatenation and list replication?

	-> + and *

10. What is the difference between the append() and insert() list methods?

	-> append() adds the given value to the end of the list.
	-> insert() inserts the given value at a particular index we specify.

11. What are two ways to remove values from a list?

	-> remove() and del()

12. Name a few ways that list values are similar to string values.

	-> The indexing and reverse indexing of the list elements and the characters of a string are the same. We can use slicing with both list snd strings. We can use + operator for concatenation and * for replication of both list and strings.

13. What is the difference between lists and tuples?

	-> Lists are mutable whereas tuples are immutable. We use [] for lists and () for tuples.

14. How do you type the tuple value that has just the integer value 42 in it?

	->(42,)

15. How can you get the tuple form of a list value? How can you get the list form of a tuple value?

	-> To get the tuple form of a list value : tuple(<list>)
	-> To get the list form of a tuple value : list(<tuple>)

16. Variables that “contain” list values don’t actually contain lists directly. What do they contain instead?

	-> They contain reference or the address location of tthe list.

17. What is the difference between copy.copy() and copy.deepcopy()?

	-> copy.copy() copies the list to a new variable and the copied list has a new address location so any changes made to the original list will not affect the copied list
	-> We should use copy.deepcopy() if the list to be copied contains another list as one of its elements i.e, nested lists.
	