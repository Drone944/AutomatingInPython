1. Which of the following are operators, and which are values?

*          ->  operator
'hello'    ->  value
-88.8      ->  value
-          ->  operator 
/          ->  operator
+          ->  operator
5          ->  value

2. Which of the following is a variable, and which is a string?

spam       ->  variable
'spam'     ->  string

3. Name three data types.

  ->  int, float, string

4. What is an expression made up of? What do all expressions do?

An expression is made up of operators, variables and function calls. Expressions are the basic building blocks that make programs.
Expressions can be used to write programs and to instruct Python to operate on large amounts of data.

5. This chapter introduced assignment statements, like spam = 10. What is the difference between an expression and a statement?

An expression does some calulations and will be evaluated to something, but a statement is like declaration.

6. What does the variable bacon contain after the following code runs?

bacon = 20
bacon + 1

   -> value of bacon will be 21.

7. What should the following two expressions evaluate to?

'spam' + 'spamspam'  ->  'spamspamspam'
'spam' * 3           ->  'spamspamspam'

8. Why is eggs a valid variable name while 100 is invalid?

eggs ia a valid name because it doesn't violate the 3 rules of declaring a variable name, it starts with a letter contains only letters and does not have any whitespace or special characters.

100 starts with a number which violates the rule stating a variable name cannot begin with a number.

9. What three functions can be used to get the integer, floating-point number, or string version of a value?

To get the integer version -> int()
To get the floating-point version -> float()
To get the string version -> str()

10. Why does this expression cause an error? How can you fix it?

'I have eaten ' + 99 + ' burritos.'

You cannot concatenate a integer with a string, to correct this we must give 99 in single quotes -> 'I have eaten ' + '99' + ' burritos.'